#!/usr/bin/env python

from __future__ import print_function

import subprocess
import datetime

import sys

insert_size = '800bp_library_'
output_dir = '/data/jseaman/assemblies/'
log_file_name = 'scaffold ' + str(datetime.datetime.now()).split('.')[0] + '.log'


def out_log_file_name():
    return log_file_name[:-3] + 'out'


def log_command(args):
    command = ' '.join(args) if isinstance(args, list) else args
    print(command)
    with open(log_file_name, 'a') as log:
        log.writelines([command])
    return command


def call(args):
    command = log_command(args)
    return subprocess.check_output(command, shell=True)


def SSPACE_scaffolding(frax_name):
    """
    /data/home/eex057/SSPACE-STANDARD-3.0_linux-x86_64/SSPACE_Standard_v3.0.pl \
    	-s /data/SBCS-BuggsLab/LauraKelly/assembly/FRAX01_all_paired_reads_min_50bp_de_novo_assembly_max_bubble_size_5000_min_contig_length_200_contig_list.fa \ # contigs
    	-l /data/scratch/eex057/FRAX01/sspacelibraryfile01 \ # generated by ...
            -b RUN1 \  # output folder to create
    	-T 24 2>&1 >log01.txt  # -T = threads
    """
    call(['/data/home/eex057/SSPACE-STANDARD-3.0_linux-x86_64/SSPACE_Standard_v3.0.pl',
          '-s "/data/SBCS-BuggsLab/LauraKelly/assembly' +
          '/FRAX02 bubblesize_50 mincontig_200 MAP_BACK 2017-07-07  assembly.fa.gz"',  # contigs
          '-l /data/scratch/eex057/FRAX01/sspacelibraryfile01',  # generated by ...
          '-b ', frax_name,   # output folder to create
          '-T 24',  # -T = threads'])
          '2>&1 >' + out_log_file_name() + '.txt',
          ])


def gap_closer(frax_name):
    """
    module load SOAP/2.40
    cd /data/scratch/eex057/FRAX01/
    GapCloser -a /data/scratch/eex057/FRAX01/RUN1/RUN1.final.scaffolds.fasta \
    	-b /data/scratch/eex057/FRAX01/GapCloser01.config \
    	-o GAPCLOSER01 \
            -t 8 >log-gapcloser01.txt 2>&1
    """
    pass


def main(frax_name):
    # Get CLC denovo assembly


    # Scaffold using long mate pairs
    SSPACE_scaffolding(frax_name)

    # Close gaps in scaffolded assembly
    gap_closer(frax_name)


if __name__ == '__main__':
    assert sys.argv[1], "Include Frax name: e.g. FRAX01"
    frax_number = sys.argv[1]
    log_file_name = frax_number + ' ' + log_file_name
    main(frax_number)




"""
module load SOAP/2.40

cd /data/scratch/eex057/FRAX01/

GapCloser -a /data/scratch/eex057/FRAX01/RUN1/RUN1.final.scaffolds.fasta \
	-b /data/scratch/eex057/FRAX01/GapCloser01.config \
	-o GAPCLOSER01 \
        -t 8 >log-gapcloser01.txt 2>&1 
"""